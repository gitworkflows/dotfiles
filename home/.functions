# Create a new directory and enter it
function mkd() {
  mkdir -p "$@" && cd "$_";
}

# create a file and parent directories
# mkfile "foo/bar/baz.txt"
function mkfile() {
  mkdir -p -- $(dirname "$1") && touch -- "$1"
}

# Determine size of a file or total size of a directory
function fs() {
  if du -b /dev/null > /dev/null 2>&1; then
    local arg=-sbh;
  else
    local arg=-sh;
  fi
  if [[ -n "$@" ]]; then
    du $arg -- "$@";
  else
    du $arg .[^.]* ./*;
  fi;
}

# `tre` is a shorthand for `tree` with hidden files and color enabled, ignoring
# the `.git` directory, listing directories first. The output gets piped into
# `less` with options to preserve color and line numbers, unless the output is
# small enough for one screen.
function tre() {
  tree -aC -I '.git|node_modules|bower_components' --dirsfirst "$@" | less -FRNX;
}

# Run a local https://danger.systems/js/ script against a remote PR
function test_danger() {
  REPO=$1
  PR_NUMBER=$2
  DANGER_GITHUB_API_TOKEN=$GCA_ACCESS_TOKEN DANGER_FAKE_CI=YEP DANGER_TEST_REPO=$REPO yarn danger pr https://github.com/$REPO/pull/$PR_NUMBER
}

# run `fnm use` with the provided version
function nodev() {
  echo "Setting Node version to $1"
  fnm use $1
  echo "Installing npm binaries..."
  ~/Dev/dotfiles/06-install-npm-binaries.sh
}
